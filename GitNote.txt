mkdir -> tạo folder bằng trong màn hình git bash
phải có file README.md -> để mô tả project sử dụng cho cái gì

-m dùng để miêu tả file commit
vd: git commit -m 'trong đây là câu miêu tả'.

nếu git lần đầu
git config --global user.email "trong đây là email của mình"
git config --global user.name	"trog đây là tên người dùng"

git log -> dùng để xem lịch sử 

git show -> xem nội dung trong file
 + sau git show sẽ là một đoạn mã của file ( đoạn mã sẽ có khi git log) 
	vd: git show mã code file ở đây

git diff -> để xem nội dung thay đổi của cách file được modify

git checkout -> quay lại nội dụng sau khi modify ( phải save trên project)
	     -> nằm trong working directory.
git reset -> sau khi đã add lên staging area dùng git reset để trả về working directory
======	
brach là nhánh, master luôn là brach chính để chạy server
git brach để xem con trỏ trỏ vào brach nào

git checkout -b <tên brach mới tạo> // chuyển qua brach mới lun

git checkout <tên brach> // di chuyển con trỏ tới brach chọn 

git merge -> dùng để ghép của một brach này một brach khác
* lưu ý:
git checkout A
git merge B
// phải checkout con trỏ có trong brach A ko rồi mới có thể merge B vào A

git brach -D <tên brach cần xoá>
// phải đảm bảo repository phải sạch sẽ, sau khi ghép và chắc ăn rồi 
có thể xoá nếu ko dùng brach đó nữa.

git reset --soft <mã của commit> // dùng để trả từ reponsity xuống staging area
git reset --mixed <mã của commit> // dùng để trả từ reponsity xuống working directory
git reset --hard <mã của commit> // xoá luôn file, xoá luôn cả code trước đó *Cẩn thận khi dùng*

git revert <mã của commit>

.gitignore // tạo ra file .gitignore và rõ vào tên của cái file mà mình ko muốn nó hiện thị khi rõ status (file đó phải chưa đc add và commit)
===============================
Github

git remote add origin <link github>
